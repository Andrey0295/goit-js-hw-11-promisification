{"version":3,"sources":["js/task_1.js","js/task_2.js","js/task_3.js","index.js"],"names":["delay","ms","Promise","resolve","setTimeout","logger","time","console","log","then","users","name","active","toggleUserState","allUsers","userName","user","data","table","randomIntegerFromInterval","min","max","Math","floor","random","makeTransaction","transaction","onSuccess","onError","reject","canProcess","logSuccess","id","logError","warn","amount","catch"],"mappings":"AAEA,AEFA,IFEMA,AEFAmB,KFEK,GAAG,SAARnB,KAAQ,CAAAC,EAAE,AEFe,EFEZ,CEFe,SAA5BkB,yBAA4B,CAACC,GAAD,EAAMC,GAAN,EAAc;AFI5C,AEHA,SFGO,AEHAC,IFGIpB,AEHA,CAACqB,KAAL,CFGA,AEHWD,CFGC,GEHG,CAACE,MFGJrB,AEHD,MAAiBkB,CFGT,EAAI,AEHQ,GAAGD,GAAN,GAAY,CAA7B,IAAkCA,GAA7C,CAAP;ACAJ,AHKQhB,AEJL,CAFH,GFMQA,UAAU,CAAC;AAAA,aAAMD,OAAO,CAACF,EAAD,CAAb;AGJnB,AHImB,AEAjB,IAAMwB,CFAU,EAAmBxB,EAAnB,CAAV,SEAe,GAAG,SAAlBwB,eAAkB,CAACC,WAAD,EAAcC,SAAd,EAAyBC,OAAzB,EAAqC;AFCxD,AEAH,GFHO,CAAP,EEGM5B,KAAK,GAAGmB,yBAAyB,CAAC,GAAD,EAAM,GAAN,CAAvC;ACJJ,AHMC,ACTD,ACUI,CFRJ,QEQW,IAAIjB,OAAJ,CAAY,UAACC,OAAD,EAAU0B,MAAV,EAAqB;ADT5C,ACUY,QAAMC,UAAU,GAAGR,IAAI,CAACE,MAAL,KAAgB,GAAnC;AFCV,ACRF,ACSYpB,IFDJC,ACRFK,ACSMN,KDTD,CDQG,ECRA,CDQG,ACPb,CCQkB,CAAC,OFDfC,KECqB,CFDZ,CAAAC,IAAI;AAAA,ACPfK,ACSQ,EDTRA,IAAI,EAAE,CDOaJ,CEEPuB,KDTd,CDO4B,CAACtB,GAAR,AEEX,EAAgB,wBFFyBF,IAA9B,QAAJ;AAAA,ACPAM,ACULT,CFHd,CCPmBS,CDSnB,KCTyB,ACUXT,EDVa,KCUN,CAAC4B,UAAU,CAAC;ADV/B,ACUgCC,CDXtB,EAEV,OCSgCA,EAAE,EAAEN,WAAW,CAACM,EAAjB;ADT7BrB,ACSkDL,EDTlDK,IAAI,EAAE,ECS4CL,IDTpD,ACSwD,EAAEN;AFA5DA,ACTkBY,ACSe,EDTfA,GDSb,CAAC,ECTkB,CCSQ,CFA3B,ACTqB,ACSL,CFArB,AEAc,CFAFH,IAAZ,CAAiBJ,MAAjB,GAA0B;ACTxB,ACUW,CDZD,EAGV;ADSFL,ACTIW,EAAAA,GDSC,CAAC,ACTE,EAAE,EDSL,CAAL,CAAYF,ECTV,EDSF,CAAiBJ,MAAjB,GAA0B;ACTRO,ACWNiB,EDXMjB,ICWNiB,EDXY,EAAE,ECWR,CAACI,QAAQ,CAACP,WAAW,CAACM,EAAb,CAAT,CAAN;AFDZhC,ACVE,ACYS,CDfC,EAIV,EDSG,AEJe,CFId,CEEOA,GFFR,CAAL,CAAYS,AEJQ,CAAV,GFIV,CAAiBJ,MAAjB,GAA0B;ACTtBM,ACYK,EDZLA,CCEK,CAAP,EDFM,EAAE,KAAR;ADUFX,ACViBY,ACad,CAfH,CDEiBA,GDUZ,CAAC,ECViB,EDUlB,ACVoB,CDUzB,CAAYH,IAAZ,CAAiBJ,MAAjB,GAEF;AACA,ACbI,CAJU,CAAd;ADkBA,AEOE,IAAM0B,UAAU,GAAG,SAAbA,UAAa,OAAgB;AFNrC,ACXE,ACiBmC,IDjB7BlB,ECiBemB,EAAc,QAAdA,EAAc,CDjBd,GAAG,SAAlBnB,eAAkB,CAACC,QAAD,EAAWC,QAAX,EAAwB;ADYlD,ACXM,ACgB+B,MAAVT,GDhBd,CCgBwB,GDhBpBJ,KCgBUI,EDhBd,CAAY,CCgBY,SDhBZH,OAAO,EAAI;ADYpC,ACZoC,ACiBhCI,EAAAA,OAAO,CAACC,GAAR,uBAA2BwB,EAA3B,SDhByBtB,KADO,aCiBcJ,IAA9C;ADjBgC,ACkBjC,CAFD;;ADhBkC,ACoBlC,IAAM2B,QAAQ,GAAG,SAAXA,QAAW,CAAAD,EAAE,EAAI;ADnBf,ACoBNzB,EAAAA,OAAO,CAAC2B,IAAR,wCAA6CF,EAA7C,EDpB+B;AAAA,ACqBhC,CAFD,WDnBmBhB,IAAc;ACwBjC;ADvBY,YAAGA,IAAI,CAACL,IAAL,KAAcI,QAAjB,EAA0B;AACtBC,UAAAA,IAAI,CAACJ,MAAL,GAAc,CAACI,IAAI,CAACJ,MAApB;AACH;AACF;AALuB,AC4BlCa,eAAe,CAAC;AD5BkB,AC4BhBO,EAAAA,EAAE,EAAE,EAAN;AD5BkB,AC4BRG,EAAAA,MAAM,EAAE;AD5BA,AC4BlB,CAAD,CAAf,CACG1B,IADH,CACQsB,UADR,EAEGK,KAFH,CAESH,QAFT;AD5BkC,ACgClCR,eAAe,CAAC;AAAEO,EAAAA,EAAE,EAAE,EAAN;AD1BN7B,AC0BgBgC,EAAAA,ED1BhBhC,IC0BsB,EAAE,CD1BjB,CAACW,QAAD,CAAP;AACL,ACyBW,CAAD,CAAf,CDhCW,ACiCRL,CDjCC,GCgCJ,CACQsB,UADR,EAEGK,KAFH,CAESH,QAFT;ADvBC,AC2BDR,CDrCA,cCqCe,CAAC;AAAEO,EAAAA,EAAE,EAAE,EAAN;AD1BhB,AC0B0BG,EAAAA,ED1BpB9B,IC0B0B,ED1BpB,AC0BsB,GD1BnB,SAATA,MAAS,CAAAY,IAAI;AAAA,AC0BH,CAAD,CAAf,CACGR,IADH,CACQsB,CD3BexB,OAAO,CAACW,CC0B/B,EAEGkB,ED5BoB,CAAcnB,EC0BrC,CAESgB,CD5Bc,CAAJ,MC0BnB;AD1BmB,AC8BnBR,CD9BA,cC8Be,CAAC;AD5BhB,AC4BkBO,EAAAA,EAAE,EAAE,EAAN;AAAUG,EAAAA,MAAM,EAAE;AAAlB,CAAD,CAAf,CACG1B,IADH,CACQsB,UADR,EAEGK,KAFH,CAESH,QAFT;;;ADzBApB,eAAe,CAACH,KAAD,EAAQ,OAAR,CAAf,CAAgCD,IAAhC,CAAqCJ,MAArC;AACAQ,eAAe,CAACH,KAAD,EAAQ,KAAR,CAAf,CAA8BD,IAA9B,CAAmCJ,MAAnC","file":"src.e31bb0bc.js","sourceRoot":"..\\src","sourcesContent":["\r\n\r\nconst delay = ms =>{\r\n    \r\n    return new Promise(resolve => {\r\n        \r\n        setTimeout(() => resolve(ms),ms);\r\n      });  \r\n   \r\n}\r\n\r\n\r\n  const logger = time => console.log(`Resolved after ${time}ms`);\r\n  \r\n  // Вызовы функции для проверки\r\n  delay(2000).then(logger); // Resolved after 2000ms\r\n  delay(1000).then(logger); // Resolved after 1000ms\r\n  delay(1500).then(logger); // Resolved after 1500ms\r\n  delay(5000).then(logger);\r\n\r\n//   Напиши функцию delay(ms),\r\n//    которая возвращает промис,\r\n//     переходящий в состояние \"resolved\" через ms миллисекунд.\r\n//      Значением исполнившегося промиса\r\n//       должно быть то кол-во миллисекунд\r\n//        которое передали во время вызова функции delay.","// Перепиши функцию toggleUserState() так, чтобы она не использовала callback-функцию callback,\r\n//  а принимала всего два параметра allUsers и userName и возвращала промис.\r\n\r\n\r\nconst users = [\r\n    { name: 'Mango', active: true },\r\n    { name: 'Poly', active: false },\r\n    { name: 'Ajax', active: true },\r\n    { name: 'Lux', active: false },\r\n  ];\r\n  \r\n\r\n  const toggleUserState = (allUsers, userName) => {\r\n      return new Promise(resolve => {\r\n          for (const user of users){\r\n              if(user.name === userName){\r\n                  user.active = !user.active;\r\n              }\r\n            }\r\n            resolve(allUsers)\r\n      })\r\n      \r\n  }\r\n  const logger = data => console.table(data);\r\n\r\n  /*\r\n   * Должно работать так\r\n   */\r\n  toggleUserState(users, 'Mango').then(logger);\r\n  toggleUserState(users, 'Lux').then(logger);\r\n ","const randomIntegerFromInterval = (min, max) => {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n  };\r\n\r\n\r\n  \r\n  const makeTransaction = (transaction, onSuccess, onError) => {\r\n    const delay = randomIntegerFromInterval(200, 500);\r\n\r\n\r\n    return new Promise((resolve, reject) => {\r\n            const canProcess = Math.random() > 0.3;\r\n        \r\n            setTimeout(() => {\r\n              if (canProcess) {\r\n                resolve(logSuccess({id: transaction.id, time: delay}));\r\n              }\r\n        \r\n              reject(logError(transaction.id));\r\n            }, delay);\r\n          });\r\n    }\r\n  \r\n  \r\n  \r\n\r\n\r\n\r\n  \r\n  const logSuccess = ({id, time}) => {\r\n    console.log(`Transaction ${id} processed in ${time}ms`);\r\n  };\r\n  \r\n  const logError = id => {\r\n    console.warn(`Error processing transaction ${id}. Please try again later.`);\r\n  };\r\n  \r\n \r\n  /*\r\n   * Должно работать так\r\n   */\r\n  makeTransaction({ id: 70, amount: 150 })\r\n    .then(logSuccess)\r\n    .catch(logError);\r\n  \r\n  makeTransaction({ id: 71, amount: 230 })\r\n    .then(logSuccess)\r\n    .catch(logError);\r\n  \r\n  makeTransaction({ id: 72, amount: 75 })\r\n    .then(logSuccess)\r\n    .catch(logError);\r\n  \r\n  makeTransaction({ id: 73, amount: 100 })\r\n    .then(logSuccess)\r\n    .catch(logError);","\r\nimport \"./js/task_1\"\r\nimport \"./js/task_2\"\r\nimport \"./js/task_3\""]}